<?php

/**
 * @file
 * HistoricalSurvey Survey module
 *
 * This module adds creates the "Survey" content type
 *
 */

/**
 * Implement hook_help().
 */
function historicalsurvey_survey_help($path, $arg) {
  if ($path == 'admin/help/#historicalsurvey_survey') {
    return t("HistoricalSurvey Survey module adds custom Survey Effort content type");
  }
}

/**
 * Implement hook_menu().
 */
function historicalsurvey_survey_menu() {
  $items = array();

  return $items;
}


function historicalsurvey_survey_form($form, &$form_state) {
  return system_settings_form($form);
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 * Alters the Create New Survey Effort form
 */
function historicalsurvey_survey_form_place_node_form_alter(&$form, &$form_state, $form_id) {

}

function historicalsurvey_survey_validate($form, &$form_state) {

}

function historicalsurvey_survey_submit($form, &$form_state) { }

function historicalsurvey_survey_block_info() {
  $blocks = array();
  $blocks['list_suvery_places'] = array(
    'info' => t('Places in Survey Effort'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

function historicalsurvey_survey_block_view($block_name = '') {
  if ($block_name == 'list_suvery_places') {
    if (arg(0) == 'node' && is_numeric(arg(1)) && node_load(arg(1))->type == 'survey') {

      $result = db_select('node', 'n');
      $result->join('field_data_field_survey_effort', 's', 'n.nid=s.entity_id');
      $result
          ->fields('n', array('nid', 'title'))
          ->condition('n.type', 'place')
          ->condition('n.status', '1')
          ->condition('s.field_survey_effort_nid', arg(1));

      if ($node_title_list = node_title_list($result->execute())) {
        $block['subject'] = t('Places');
        $block['content'] = $node_title_list;
        return $block;
      }
    }
  }
}
